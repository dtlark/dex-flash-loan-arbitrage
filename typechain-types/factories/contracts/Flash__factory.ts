/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Flash, FlashInterface } from "../../contracts/Flash";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pairAddress",
        type: "address",
      },
    ],
    name: "doSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d7e806100606000396000f3fe6080604052600436106100595760003560e01c806310d1e85c1461007e5780632e1a7d4d146100a757806376288b28146100d05780638da5cb5b146100f95780639db5dbe414610124578063b69ef8a81461014d57610079565b366100795734600160008282546100709190610af1565b92505081905550005b600080fd5b34801561008a57600080fd5b506100a560048036038101906100a0919061076c565b610178565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190610864565b61017f565b005b3480156100dc57600080fd5b506100f760048036038101906100f291906106f5565b610309565b005b34801561010557600080fd5b5061010e610426565b60405161011b9190610999565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190610815565b61044a565b005b34801561015957600080fd5b5061016261063c565b60405161016f9190610a5d565b60405180910390f35b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610204906109dd565b60405180910390fd5b600154811115610252576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610249906109fd565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050509050806102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e390610a3d565b60405180910390fd5b81600160008282546102fe9190610b47565b925050819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037090610a1d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8484306040518060400160405280600581526020017f466c6173680000000000000000000000000000000000000000000000000000008152506040518563ffffffff1660e01b81526004016103ed9493929190610a78565b600060405180830381600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf906109dd565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105139190610999565b60206040518083038186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610563919061088d565b9050808211156105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f906109fd565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016105e39291906109b4565b602060405180830381600087803b1580156105fd57600080fd5b505af1158015610611573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063591906107ec565b5050505050565b60015481565b60008135905061065181610cec565b92915050565b60008151905061066681610d03565b92915050565b60008083601f84011261067e57600080fd5b8235905067ffffffffffffffff81111561069757600080fd5b6020830191508360018202830111156106af57600080fd5b9250929050565b6000813590506106c581610d1a565b92915050565b6000813590506106da81610d31565b92915050565b6000815190506106ef81610d31565b92915050565b600080600080600060a0868803121561070d57600080fd5b600061071b88828901610642565b955050602061072c88828901610642565b945050604061073d888289016106cb565b935050606061074e888289016106cb565b925050608061075f88828901610642565b9150509295509295909350565b60008060008060006080868803121561078457600080fd5b600061079288828901610642565b95505060206107a3888289016106cb565b94505060406107b4888289016106cb565b935050606086013567ffffffffffffffff8111156107d157600080fd5b6107dd8882890161066c565b92509250509295509295909350565b6000602082840312156107fe57600080fd5b600061080c84828501610657565b91505092915050565b60008060006060848603121561082a57600080fd5b6000610838868287016106b6565b935050602061084986828701610642565b925050604061085a868287016106cb565b9150509250925092565b60006020828403121561087657600080fd5b6000610884848285016106cb565b91505092915050565b60006020828403121561089f57600080fd5b60006108ad848285016106e0565b91505092915050565b6108bf81610b7b565b82525050565b60006108d082610ac4565b6108da8185610acf565b93506108ea818560208601610bd5565b6108f381610c37565b840191505092915050565b600061090b601783610ae0565b915061091682610c48565b602082019050919050565b600061092e601283610ae0565b915061093982610c71565b602082019050919050565b6000610951601983610ae0565b915061095c82610c9a565b602082019050919050565b6000610974600b83610ae0565b915061097f82610cc3565b602082019050919050565b61099381610bcb565b82525050565b60006020820190506109ae60008301846108b6565b92915050565b60006040820190506109c960008301856108b6565b6109d6602083018461098a565b9392505050565b600060208201905081810360008301526109f6816108fe565b9050919050565b60006020820190508181036000830152610a1681610921565b9050919050565b60006020820190508181036000830152610a3681610944565b9050919050565b60006020820190508181036000830152610a5681610967565b9050919050565b6000602082019050610a72600083018461098a565b92915050565b6000608082019050610a8d600083018761098a565b610a9a602083018661098a565b610aa760408301856108b6565b8181036060830152610ab981846108c5565b905095945050505050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610afc82610bcb565b9150610b0783610bcb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b3c57610b3b610c08565b5b828201905092915050565b6000610b5282610bcb565b9150610b5d83610bcb565b925082821015610b7057610b6f610c08565b5b828203905092915050565b6000610b8682610bab565b9050919050565b60008115159050919050565b6000610ba482610b7b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610bf3578082015181840152602081019050610bd8565b83811115610c02576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206f776e65722063616e207769746864726177000000000000000000600082015250565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b7f546f6b656e207061697220646f6573206e6f7420657869737400000000000000600082015250565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b610cf581610b7b565b8114610d0057600080fd5b50565b610d0c81610b8d565b8114610d1757600080fd5b50565b610d2381610b99565b8114610d2e57600080fd5b50565b610d3a81610bcb565b8114610d4557600080fd5b5056fea26469706673582212206318f0e6d339b03a579fe2adf920acd58fd13b25ff77f5955912fb8c3db0819a64736f6c63430008040033";

type FlashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Flash__factory extends ContractFactory {
  constructor(...args: FlashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Flash> {
    return super.deploy(overrides || {}) as Promise<Flash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Flash {
    return super.attach(address) as Flash;
  }
  override connect(signer: Signer): Flash__factory {
    return super.connect(signer) as Flash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashInterface {
    return new utils.Interface(_abi) as FlashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flash {
    return new Contract(address, _abi, signerOrProvider) as Flash;
  }
}
