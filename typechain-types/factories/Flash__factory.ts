/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Flash, FlashInterface } from "../Flash";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109e4806100606000396000f3fe60806040526004361061004e5760003560e01c80632e1a7d4d14610073578063429a1bb0146100b05780638da5cb5b146100db5780639db5dbe414610106578063b69ef8a81461012f5761006e565b3661006e57346001600082825461006591906107c4565b92505081905550005b600080fd5b34801561007f57600080fd5b5061009a600480360381019061009591906105f1565b61015a565b6040516100a7919061071d565b60405180910390f35b3480156100bc57600080fd5b506100c56102ec565b6040516100d29190610798565b60405180910390f35b3480156100e757600080fd5b506100f06102f4565b6040516100fd91906106d9565b60405180910390f35b34801561011257600080fd5b5061012d600480360381019061012891906105a2565b610318565b005b34801561013b57600080fd5b5061014461050a565b6040516101519190610798565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e290610738565b60405180910390fd5b600154821115610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610758565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050509050806102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c190610778565b60405180910390fd5b82600160008282546102dc919061081a565b9250508190555080915050919050565b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d90610738565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103e191906106d9565b60206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610431919061061a565b905080821115610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d90610758565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016104b19291906106f4565b602060405180830381600087803b1580156104cb57600080fd5b505af11580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190610579565b5050505050565b60015481565b60008135905061051f81610952565b92915050565b60008151905061053481610969565b92915050565b60008135905061054981610980565b92915050565b60008135905061055e81610997565b92915050565b60008151905061057381610997565b92915050565b60006020828403121561058b57600080fd5b600061059984828501610525565b91505092915050565b6000806000606084860312156105b757600080fd5b60006105c58682870161053a565b93505060206105d686828701610510565b92505060406105e78682870161054f565b9150509250925092565b60006020828403121561060357600080fd5b60006106118482850161054f565b91505092915050565b60006020828403121561062c57600080fd5b600061063a84828501610564565b91505092915050565b61064c8161084e565b82525050565b61065b81610860565b82525050565b600061066e6017836107b3565b9150610679826108d7565b602082019050919050565b60006106916012836107b3565b915061069c82610900565b602082019050919050565b60006106b4600b836107b3565b91506106bf82610929565b602082019050919050565b6106d38161089e565b82525050565b60006020820190506106ee6000830184610643565b92915050565b60006040820190506107096000830185610643565b61071660208301846106ca565b9392505050565b60006020820190506107326000830184610652565b92915050565b6000602082019050818103600083015261075181610661565b9050919050565b6000602082019050818103600083015261077181610684565b9050919050565b60006020820190508181036000830152610791816106a7565b9050919050565b60006020820190506107ad60008301846106ca565b92915050565b600082825260208201905092915050565b60006107cf8261089e565b91506107da8361089e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561080f5761080e6108a8565b5b828201905092915050565b60006108258261089e565b91506108308361089e565b925082821015610843576108426108a8565b5b828203905092915050565b60006108598261087e565b9050919050565b60008115159050919050565b60006108778261084e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f6e6c79206f776e65722063616e207769746864726177000000000000000000600082015250565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b61095b8161084e565b811461096657600080fd5b50565b61097281610860565b811461097d57600080fd5b50565b6109898161086c565b811461099457600080fd5b50565b6109a08161089e565b81146109ab57600080fd5b5056fea26469706673582212201fd388da43c1fd7908f60a39be698ab1ac7f0650c053428759b863e407161e3e64736f6c63430008040033";

type FlashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Flash__factory extends ContractFactory {
  constructor(...args: FlashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Flash> {
    return super.deploy(overrides || {}) as Promise<Flash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Flash {
    return super.attach(address) as Flash;
  }
  override connect(signer: Signer): Flash__factory {
    return super.connect(signer) as Flash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashInterface {
    return new utils.Interface(_abi) as FlashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flash {
    return new Contract(address, _abi, signerOrProvider) as Flash;
  }
}
